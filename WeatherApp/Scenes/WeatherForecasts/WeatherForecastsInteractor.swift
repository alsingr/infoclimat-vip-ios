//
//  WeatherForecastsInteractor.swift
//  WeatherApp
//
//  Created by Alvyn SILOU on 06/10/2018.
//  Copyright (c) 2018 Alvyn SILOU. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WeatherForecastsBusinessLogic
{
  func fetchWeatherForecasts(request: WeatherForecasts.FetchWeatherData.Request)
  func showWeatherDataOfSelectedDay(request: WeatherForecasts.ShowDetails.Request)
}

protocol WeatherForecastsDataStore
{
  var interimStatementsOfSelectedDay: [DailyInterimStatement] { get set }
}

class WeatherForecastsInteractor: WeatherForecastsBusinessLogic, WeatherForecastsDataStore
{
  var presenter: WeatherForecastsPresentationLogic?
  var interimStatementsOfSelectedDay = [DailyInterimStatement]()

  var weatherData = [Date: [DailyInterimStatement]]()
  var worker = WeatherWorker(weatherDataStore: WeatherApi())

  // MARK: FetchWeatherData
  
  func fetchWeatherForecasts(request: WeatherForecasts.FetchWeatherData.Request)
  {
    worker.fetchWeatherForecasts { interimStatementsWithin7Days in
      self.weatherData = interimStatementsWithin7Days
      let response = WeatherForecasts.FetchWeatherData.Response(interimStatements: interimStatementsWithin7Days)
      self.presenter?.presentWeatherForecasts(response: response)
    }
  }
  
  // MARK: Show Details of the selected day
  func showWeatherDataOfSelectedDay(request: WeatherForecasts.ShowDetails.Request)
  {
    self.interimStatementsOfSelectedDay = weatherData[request.date] ?? []
  }
}
