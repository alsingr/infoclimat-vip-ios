//
//  WeatherForecastsPresenter.swift
//  WeatherApp
//
//  Created by Alvyn SILOU on 06/10/2018.
//  Copyright (c) 2018 Alvyn SILOU. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WeatherForecastsPresentationLogic
{
  func presentWeatherForecasts(response: WeatherForecasts.FetchWeatherData.Response)
}

class WeatherForecastsPresenter: WeatherForecastsPresentationLogic
{
  weak var viewController: WeatherForecastsDisplayLogic?
  
  // MARK: FetchWeatherData
  
  func presentWeatherForecasts(response: WeatherForecasts.FetchWeatherData.Response)
  {
    let transformedViewModels = transformToDisplayedWeatherData(statements: response.interimStatements)
    let viewModel = WeatherForecasts.FetchWeatherData.ViewModel(weatherData:transformedViewModels)
    viewController?.displayWeatherForecasts(viewModel: viewModel)
  }
}

extension WeatherForecastsPresenter {
  private func transformToDisplayedWeatherData(statements: [Date: [DailyInterimStatement]]) -> [WeatherForecasts.FetchWeatherData.ViewModel.DaysWeatherData] {
    
    return statements.map({
      let minMax = WeatherForecastsPresenter.minMaxTemperature(array: $0.value)
      return WeatherForecasts.FetchWeatherData.ViewModel.DaysWeatherData(date: $0.key, minTemperature: minMax?.min ?? 0, maxTemperature: minMax?.max ?? 0)
    }).sorted(by: { v1, v2 in v1.date < v2.date })
  }
  
  static func minMaxTemperature(array: [DailyInterimStatement]) -> (min: Int, max: Int)? {
    if array.isEmpty { return nil }
    var currentMin = array[0].temperature
    var currentMax = array[0].temperature
    
    for value in array[1..<array.count] {
      if value.temperature < currentMin {
        currentMin = value.temperature
      } else if value.temperature > currentMax {
        currentMax = value.temperature
      }
    }
    return (currentMin, currentMax)
  }
  
}

